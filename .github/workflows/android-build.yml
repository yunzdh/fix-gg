name: Android NDK Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Android NDK
      run: |
        # 直接下载并安装 NDK r21b（和你本地版本一致）
        wget -q https://dl.google.com/android/repository/android-ndk-r21b-linux-x86_64.zip
        unzip -q android-ndk-r21b-linux-x86_64.zip
        echo "NDK_PATH=$(pwd)/android-ndk-r21b" >> $GITHUB_ENV
        echo "$(pwd)/android-ndk-r21b" >> $GITHUB_PATH

    - name: Debug - Show project structure
      run: |
        echo "=== 项目文件结构 ==="
        ls -la
        echo "=== Android.mk 内容 ==="
        if [ -f "Android.mk" ]; then
          cat Android.mk
        else
          echo "Android.mk 不存在！"
        fi
        echo "=== Application.mk 内容 ==="
        if [ -f "Application.mk" ]; then
          cat Application.mk
        fi

    - name: Clean previous build
      run: |
        [ -d "obj" ] && rm -rf obj && echo "Cleaned obj directory"
        [ -d "libs" ] && rm -rf libs && echo "Cleaned libs directory"

    - name: Build with NDK
      run: |
        echo "当前路径: $(pwd)"
        echo "NDK 路径: $NDK_PATH"
        # 使用明确的路径和参数构建
        $NDK_PATH/ndk-build NDK_PROJECT_PATH=$(pwd) V=1

    - name: Check build results
      run: |
        echo "=== 构建结果 ==="
        find . -name "*.so" -o -name "*.a" 2>/dev/null | head -20 || echo "未找到 .so 或 .a 文件"
        if [ -d "libs" ]; then
          echo "libs 目录:"
          ls -la libs/
        fi

    - name: Rename library file
      run: |
        if [ -f "libs/arm64-v8a/lib5.so.fix.so" ]; then
          mv "libs/arm64-v8a/lib5.so.fix.so" "libs/arm64-v8a/lib5.so.fix"
          echo "文件重命名成功"
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ndk-build-output
        path: |
          libs/
          obj/
